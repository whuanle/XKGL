<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPlSURBVHhe7Zo7ctswEIZ1iBwiZ8hkJuPCM75B7uBOM75C
        apdufAfVrnwCH8Cd65wgHUOsBGofP0CQBEVIs8U3FgEsnj92l5J3f/91neO4EBzCheAQLgSHcCE4hAvB
        IVwIDuFCcAgXQhHv3eNu1+2SPHUHaHc9tCeEtyfa3Mc3ULcBHy8P6tAz7N9hH9dAc0I47NvZ3EkiiFyp
        GNoSwudrd4c2N3D/2n0gm7U4eSYJDgFaMHcvX6ZN6zSaI3x1z/f8ADgP3fMnsqmJzQlGD1cI5xJzrEvz
        yWLOPa+VR5gxC929CGtXFiKaF8IAdNUn+k3nz6G9fs5x2HOXr73BhDcCHtouHcoK4HsR1zc8xw/Xgzx0
        TnDHqBwBhRVusSqfFu+5iL6Jfo5c7jXTjm0vSCyj8vjhWtALqUkQkgwLU2O99Cbf/3ARxbp1xXCeexmD
        He+kVdACNFk3nAsrWSYeWh8afgy2v6yITqGj5luFnbMF2WmaFEKcvF4QlfebKcqSsTj15hFuOa6zY04U
        wtvvEduTV6iUSMq5Honluu0YJIQ5hmvBF8When2zkQhSt59tfsr9i/aMoe8svbh+Mjs0twoegc9Lg9qX
        MgihRmdL4HPgc4l/8yLQmX4ExHie2feYQ1H1GtGWU5Bk2lfhco8j7Y6gdnPp+7MDRJBBLdB4Ed02+V6f
        OrTScJFoZ77mTjDYmHlYAYo19OMK8dKzbB849ydBbZdiPIJGGywFjcHR7ZMiADnA2BdMqZBgGPEKGtNW
        C+zkLWBIiGP16xJ9AIxtRUyyiCbAiW20XQptnwLZpkUA6nIHGyhw3YJUrlEI7BOAbDXIrjajbw1oYjVA
        Y3GKfoVENxe10zkEu7GHfUZAC8WwBDifFRkVQgBNdC6of83Un6JtTJeHK+t5nRRIyktY73OiF9QhVTeD
        Lf8Ho0gImjBp/jkFtynDxv1RFx5JeYdcSBA2I6EFocdknmYoGyG0PQptxvgVmSWEdVggAkY2408kcUem
        HsT0ZBXCkkVYfyEaEYL9HmCOCAaQd0AHvcAj5BLZcuK61/39oYQGhFBZBBGY6OkNl2MX32jT9/SDPHuu
        7UUQ2FgIK4kA9Ctgt1eGkoJDMSIo9yQylGybE2g2EwKK5XVEgA6Xx/O8V0gfkM0JAltm+jXZ1CPwOFtt
        Q9WNFf32dXAcmFOMcysiCDSSLFZCu+1JCdxIOBG05dZrcFtC6Dl7mZlJmMkBJLXCV2vcnBCOvHeHG3Lb
        l+BGheBMxYXgEC4Eh3AhOIQLwSFcCA7hQnAIF4JDuBAcwoXgEC4Eh3AhOIQLwSFcCA7hQnAIF4JDuBCc
        nq77D7OKH9FXaA+FAAAAAElFTkSuQmCC
</value>
  </data>
</root>